@model object
@{
  var viewData = Html.ViewContext.ViewData;
  var templateInfo = viewData.TemplateInfo;
  var modelMetadata = viewData.ModelMetadata;
  var config = (ViewData["EditorTemplateConfiguration"] as EditorTemplateConfiguration)
               ?? EditorTemplateConfiguration.DefaultConfiguration;

  if(templateInfo.TemplateDepth > 1)
  {
    <div class="form-control-static">
      @if(modelMetadata.Model == null)
      {
        @modelMetadata.NullDisplayText
      }
      else
      {
        @(modelMetadata.HtmlEncode ? Html.Encode(modelMetadata.SimpleDisplayText) : modelMetadata.SimpleDisplayText)
      }
    </div>
    return;
  }

  EditorTemplateHelpers.OverrideContainerProperties(Html.ViewDataContainer.ViewData, modelMetadata, templateInfo, config);
}
<div class="form form-horizontal">
  @foreach(var propertyMetadata in modelMetadata.Properties.Where(pm => EditorTemplateHelpers.ShouldShowProperty(pm, templateInfo)))
  {
    if(config.RenderNullProperties || propertyMetadata.Model != null)
    {
      string propertyName = propertyMetadata.PropertyName;
      if(propertyMetadata.HideSurroundingHtml)
      {
        @Html.Display(propertyName)
      }
      else
      {
        <div class="form-group">
          @if(!propertyMetadata.HideSurroundingHtml)
          {
            @Html.Label(propertyName, new { @class = $"{config.LabelClass} control-label" })
          }
          <div class="@config.EditorClass">
            <div class="form-control-static">
              @Html.Display(propertyName)
            </div>
          </div>
        </div>
      }
    }
  }
</div>